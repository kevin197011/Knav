---
alwaysApply: true
---
# 📖 通用文档规范（Docs Rules）

本规范适用于各类项目（代码库、服务、CLI、库、平台等）的文档编写、维护与发布，旨在提升文档质量、可读性、可维护性和协作效率。

---

## 1. 文档结构与命名
- 项目根目录应包含 `README.md`，简明介绍项目、用法、依赖、贡献方式等。
- 必须在文档中添加项目架构图，且架构图需采用 Mermaid 绘制（推荐放在 `README.md`、`docs/architecture.md` 或 `docs/diagrams/` 目录）。
- 详细文档建议放在 `docs/` 目录，结构清晰，按主题/模块/语言分类。
- 示例、教程、FAQ、变更日志等建议单独成文件：`examples/`、`tutorials/`、`FAQ.md`、`CHANGELOG.md`。
- 文件和目录命名统一使用小写、短横线分隔（如 `getting-started.md`、`api-reference/`）。
- 多语言文档建议采用 `README.zh-CN.md`、`docs/zh-CN/` 等命名。

## 2. README 编写规范
- 必须包含：项目简介、安装方法、快速开始、主要功能、用法示例、联系方式、许可证。
- 推荐包含：架构图、技术栈、贡献指南、常见问题、致谢。
- 结构建议：
  1. 项目简介
  2. 安装与依赖
  3. 快速开始
  4. 功能说明
  5. 用法示例
  6. 贡献指南
  7. FAQ
  8. 许可证

## 3. API/代码注释与自动化文档
- 公共 API、类、方法、参数、返回值必须有英文注释，复杂逻辑建议补充中文注释。
- 推荐采用 JSDoc、YARD、Sphinx、Doxygen、Typedoc 等自动化文档工具。
- 自动化文档应输出到 `docs/api/` 或 `docs/reference/`，并在 README 中链接。
- 注释风格统一，参数、返回值、异常、示例等信息齐全。

## 4. 版本管理与变更日志
- 所有重要变更应记录在 `CHANGELOG.md`，遵循 [Keep a Changelog](https://keepachangelog.com/) 格式。
- 版本号采用 [SemVer](https://semver.org/lang/zh-CN/) 规范。
- 文档需标明适用的版本范围。

## 5. 多语言与可访问性
- 支持多语言项目应同步维护各语言文档，目录结构清晰。
- 重要文档（如 README、API Reference）建议至少提供中英文版本。
- 图片需加 alt 文本，表格/代码块需有说明，提升可访问性。

## 6. 开源合规与版权
- 所有文档需在头部或结尾注明许可证（如 MIT、Apache-2.0 等）。
- 引用第三方内容需注明来源和原作者。
- 贡献者名单可在 `CONTRIBUTORS.md` 或 README 致谢部分列出。

## 7. 自动化与持续集成
- 推荐集成文档自动化构建（如 GitHub Pages、Read the Docs、Vercel、Netlify）。
- 文档变更应通过 PR 审核，自动化检查拼写、链接有效性、格式规范。
- 支持文档预览和版本切换。

## 8. 最佳实践与建议
- 文档与代码同步更新，避免"文档过时"。
- 重要变更、破坏性更新需在文档中高亮提示。
- 使用统一的术语表和风格指南（如 Google Developer Documentation Style Guide）。
- 文档内容应简明、结构化、易检索，避免冗余和重复。
- 适当使用图表、流程图、代码示例提升可读性。

## 9. 项目架构图示例（Mermaid）

推荐在文档中使用 [Mermaid](https://mermaid-js.github.io/) 绘制项目架构、流程、依赖关系等图表，提升可读性和协作效率。

### 示例：典型微服务项目架构

```mermaid
graph TD
  A[前端 Web/移动端] -->|REST API| B(网关服务)
  B --> C1[用户服务]
  B --> C2[订单服务]
  B --> C3[商品服务]
  C1 -- DB --> D1[(用户数据库)]
  C2 -- DB --> D2[(订单数据库)]
  C3 -- DB --> D3[(商品数据库)]
  B --> E[认证服务]
  E -- Redis --> F[(缓存/会话)]
  B --> G[消息队列]
  G --> C2
  G --> C3
  B --> H[监控/日志平台]
```

- 可根据实际项目调整节点和关系。
- 推荐将架构图放在 `README.md`、`docs/architecture.md` 或 `docs/diagrams/` 目录。
- Mermaid 支持流程图、时序图、ER 图等多种类型，详见 [Mermaid 官方文档](https://mermaid-js.github.io/mermaid/#/).

---

如需更多文档规范模板，推荐参考：
- [Google Developer Documentation Style Guide](https://developers.google.com/style)
- [Microsoft Writing Style Guide](https://learn.microsoft.com/en-us/style-guide/welcome/)
- [Keep a Changelog](https://keepachangelog.com/)
- [opensource.guide](https://opensource.guide/zh/)
